//C 
pipeline {
    agent { label 'docker-agent-1' }
    environment {
        GITHUB_TOKEN = credentials('github-pat') // References the stored PAT
        REPO = 'PierceMcGowan/rosary_prayer_counter' // Replace with your GitHub repo (e.g., 'username/my-repo')
        ARTIFACT_PATH = 'dist/linux/atart_rosary' // Path to the artifact generated by the script
    }
    stages {
        stage('Check for New Tags') {
            steps {
                script {
                    // Authenticate GitHub CLI
                    sh 'echo $GITHUB_TOKEN | gh auth login --with-token'

                    // Fetch tags
                    sh 'git fetch --tags'
                    def tags = sh(script: "git tag --sort=-creatordate", returnStdout: true).trim().split('\n')
                    def latestTag = tags[0] // Get the most recent tag

                    // Check if the tag is new
                    def lastProcessedTagFile = 'last-processed-tag.txt'
                    def lastProcessedTag = ''
                    if (fileExists(lastProcessedTagFile)) {
                        lastProcessedTag = readFile(lastProcessedTagFile).trim()
                    }

                    if (latestTag != lastProcessedTag) {
                        echo "New tag found: ${latestTag}"
                        stage('Build Artifact') {
                            // Checkout the tag
                            git url: "https://github.com/${REPO}.git", branch: latestTag

                            // Run the shell script to create the artifact
                            sh 'bash repo_setup.sh'
                            // Verify artifact exists
                            sh "test -f ${ARTIFACT_PATH} || exit 1"
                        }
                        stage('Publish Release') {
                            // Create a GitHub release and upload the artifact
                            sh """
                                gh release create ${latestTag} \
                                --repo ${REPO} \
                                --title "Release ${latestTag}" \
                                --notes "Automated release for tag ${latestTag}" \
                                --draft=false \
                                ${ARTIFACT_PATH}
                            """
                            // Update the last processed tag
                            writeFile file: lastProcessedTagFile, text: latestTag
                        }
                    } else {
                        echo "No new tags found."
                    }
                }
            }
        }
    }
    post {
        always {
            // Clean up workspace
            cleanWs()
        }
        failure {
            // Notify on failure (optional)
            echo "Release creation failed for tag ${latestTag}"
        }
    }
}